<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitf43b5d5e93954117c541411949d67f37
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        require __DIR__ . '/platform_check.php';

	    spl_autoload_register( [ 'ComposerAutoloaderInitf43b5d5e93954117c541411949d67f37', 'loadClassLoader' ], true, true );
	    self::$loader = $loader = new \Composer\Autoload\ClassLoader( \dirname( __DIR__ ) );
	    spl_autoload_unregister( [ 'ComposerAutoloaderInitf43b5d5e93954117c541411949d67f37', 'loadClassLoader' ] );

	    require __DIR__ . '/autoload_static.php';
	    call_user_func( \Composer\Autoload\ComposerStaticInitf43b5d5e93954117c541411949d67f37::getInitializer( $loader ) );

	    $loader->register(true);

        $filesToLoad = \Composer\Autoload\ComposerStaticInitf43b5d5e93954117c541411949d67f37::$files;
	    $requireFile = \Closure::bind( static function ( $fileIdentifier, $file ) {
		    if ( empty( $GLOBALS['__composer_autoload_files'][$fileIdentifier] ) )
		    {
			    $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;

			    require $file;
		    }
	    }, null, null );
	    foreach ( $filesToLoad as $fileIdentifier => $file )
	    {
		    $requireFile( $fileIdentifier, $file );
	    }

	    return $loader;
    }

}
